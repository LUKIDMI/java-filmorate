package ru.yandex.practicum.filmorate.storage;

import ru.yandex.practicum.filmorate.model.User;

import java.util.Collection;
import java.util.Optional;

/**
 * Интерфейс хранилища пользователей.
 * <p>
 * Определяет контракт для работы с хранилищем пользователей, включая методы для добавления,
 * обновления, удаления и получения пользователей.
 */
public interface UserStorage {

    /**
     * Возвращает список всех пользователей в хранилище.
     *
     * @return коллекция всех пользователей, может быть пустой, если пользователей нет
     */
    Collection<User> getAllUsers();

    /**
     * Возвращает пользователя по указанному идентификатору.
     *
     * @param userId идентификатор пользователя
     * @return Optional, содержащий найденного пользователя, или пустой Optional, если пользователь не найден
     */
    Optional<User> getUserById(Long userId);

    /**
     * Добавляет нового пользователя в хранилище.
     *
     * @param user объект пользователя для добавления, не должен быть null
     * @return добавленный пользователь
     */
    User add(User user);

    /**
     * Обновляет существующего пользователя в хранилище.
     *
     * @param user объект пользователя с обновлёнными данными, не должен быть null
     * @return обновлённый пользователь
     */
    User update(User user);

    /**
     * Удаляет пользователя из хранилища по указанному идентификатору.
     *
     * @param id идентификатор пользователя, который нужно удалить
     */
    void delete(Long id);
}
